import React, { useState } from "react";
import "./MainPage.css"; // CSS ri√™ng cho giao di·ªán

const messages = [
  {
    id: 1,
    groupName: "IUH - DHKTPM17A - CT7",
    unreadCount: 86,
    img: "https://cdn.mhnse.com/news/photo/202105/74850_47849_2150.jpg",
  },
  {
    id: 2,
    groupName: "Team ·ªîn CN M·ªõi",
    unreadCount: 6,
    img: "https://cdn.idntimes.com/content-images/community/2024/04/img-4316-f6d361070de3766c8e441e12129828b1-3d6a4e7ff5fede70fceb066160f52e37.jpeg",
  },
  {
    id: 3,
    groupName: "Team ·ªîn",
    unreadCount: 0,
    img: "https://cdn.mhnse.com/news/photo/202105/74850_47849_2150.jpg",
  },
  {
    id: 4,
    groupName: "Nh√≥m 4 PTUD JAVA",
    unreadCount: 0,
    img: "https://cdn.idntimes.com/content-images/community/2024/04/img-4316-f6d361070de3766c8e441e12129828b1-3d6a4e7ff5fede70fceb066160f52e37.jpeg",
  },
  {
    id: 5,
    groupName: "Cloud c·ªßa t√¥i",
    unreadCount: 0,
    img: "https://cdn.mhnse.com/news/photo/202105/74850_47849_2150.jpg",
  },
  {
    id: 6,
    groupName: "Cloud c·ªßa t√¥i",
    unreadCount: 0,
    img: "https://cdn.mhnse.com/news/photo/202105/74850_47849_2150.jpg",
  },
  {
    id: 7,
    groupName: "Cloud c·ªßa t√¥i",
    unreadCount: 0,
    img: "https://cdn.mhnse.com/news/photo/202105/74850_47849_2150.jpg",
  },
  {
    id: 8,
    groupName: "Cloud c·ªßa t√¥i",
    unreadCount: 0,
    img: "https://cdn.mhnse.com/news/photo/202105/74850_47849_2150.jpg",
  },
  {
    id: 9,
    groupName: "Cloud c·ªßa t√¥i",
    unreadCount: 0,
    img: "https://cdn.mhnse.com/news/photo/202105/74850_47849_2150.jpg",
  },
  {
    id: 10,
    groupName: "Cloud c·ªßa t√¥i",
    unreadCount: 0,
    img: "https://cdn.mhnse.com/news/photo/202105/74850_47849_2150.jpg",
  },
  {
    id: 11,
    groupName: "Cloud c·ªßa t√¥i",
    unreadCount: 0,
    img: "https://cdn.mhnse.com/news/photo/202105/74850_47849_2150.jpg",
  },
];

//th√™m s·ª± ki·ªán onClick ƒë·ªÉ c·∫≠p nh·∫≠t state selectedChat trong MainPage.
const MessageItem = ({ groupName, unreadCount, img, onClick }) => (
  <li className="message-item" onClick={onClick}>
    <img src={img} alt="Avatar" className="avatar" />
    <div className="message-info">
      <h4>{groupName}</h4>
      <p>Ch∆∞a c√≥ tin nh·∫Øn</p>
    </div>
    {unreadCount > 0 && <span className="badge">{unreadCount}</span>}
  </li>
);

const MainPage = () => {
  const [isSettingsOpen, setIsSettingsOpen] = useState(false);

  //ch·ªçn component MessageItem
  const [selectedChat, setSelectedChat] = useState(null);
  const [messageInput, setMessageInput] = useState(""); // N·ªôi dung tin nh·∫Øn nh·∫≠p v√†o
  const [chatMessages, setChatMessages] = useState([]); // Danh s√°ch tin nh·∫Øn c·ªßa chat

  //nh·∫•n enter g·ª≠i tin nh·∫Øn
  const handleSendMessage = (e) => {
    if (e.key === "Enter" && messageInput.trim() !== "") {
      // Th√™m tin nh·∫Øn m·ªõi v√†o danh s√°ch chatMessages
      setChatMessages((prevMessages) => [
        ...prevMessages,
        { id: prevMessages.length + 1, text: messageInput },
      ]);
      setMessageInput(""); // Reset √¥ nh·∫≠p tin nh·∫Øn
    }
  };

  const toggleSettingsMenu = () => {
    setIsSettingsOpen(!isSettingsOpen);
  };

  return (
    <div className="main-container">
      {/* Thanh b√™n tr√°i */}
      <nav className="sidebar-nav">
        <div className="nav-item">
          <img
            src="https://cdn.mhnse.com/news/photo/202105/74850_47849_2150.jpg"
            alt="User Avatar"
            className="avatar-img"
          />
        </div>
        <div className="nav-item">
          <i className="icon">üí¨</i>
        </div>
        <div className="nav-item">
          <i className="icon">üë•</i>
        </div>
        <div className="nav-item settings" onClick={toggleSettingsMenu}>
          <i className="icon">‚öôÔ∏è</i>
          {isSettingsOpen && (
            <div className="settings-menu">
              <ul>
                <li className="cat-dat">Th√¥ng tin t√†i kho·∫£n</li>
                <li className="cat-dat">C√†i ƒë·∫∑t</li>
                <li className="cat-dat">D·ªØ li·ªáu</li>
                <li className="cat-dat">Ng√¥n ng·ªØ</li>
                <li className="cat-dat">H·ªó tr·ª£</li>
                <li className="logout">ƒêƒÉng xu·∫•t</li>
              </ul>
            </div>
          )}
        </div>
      </nav>

      {/* Sidebar danh s√°ch tin nh·∫Øn */}
      <aside className="sidebar">
        <div className="sidebar-header">
          <input type="text" className="search-bar" placeholder="T√¨m ki·∫øm" />
          <button className="search-button">üîç</button>

          <button className="action-button" title="Th√™m b·∫°n">
            <img
              className="action-button-img"
              src="https://img.icons8.com/?size=100&id=23372&format=png&color=000000"
              alt=""
            />
          </button>
          <button className="action-button" title="T·∫°o nh√≥m">
            <img
              className="action-button-img"
              src="https://img.icons8.com/?size=100&id=3734&format=png&color=000000"
              alt=""
            />
          </button>
        </div>
        <div className="sidebar-tabs">
          <button className="tab active">T·∫•t c·∫£</button>
          <button className="tab">Ch∆∞a ƒë·ªçc</button>
          <button className="tab">Ph√¢n lo·∫°i</button>
        </div>
        <div className="message-list">
          <ul>
            {messages.map((message) => (
              <MessageItem
                key={message.id}
                groupName={message.groupName}
                unreadCount={message.unreadCount}
                img={message.img}
                onClick={() => setSelectedChat(message)}
              />
            ))}
          </ul>
        </div>
      </aside>

      {/* N·ªôi dung ch√≠nh */}
      <main className="main-content">
        {selectedChat ? (
          <>
            <header className="content-header">
              <div className="profile">
                <img src={selectedChat.img} alt="Avatar" className="avatar" />
                <span>{selectedChat.groupName}</span>
              </div>
            </header>
            <section className="chat-section">
              {/* Khu v·ª±c hi·ªÉn th·ªã tin nh·∫Øn */}
              <div className="chat-messages">
                {chatMessages.length > 0 ? (
                  chatMessages.map((msg) => (
                    <div key={msg.id} className="chat-message">
                      <p>{msg.text}</p>
                    </div>
                  ))
                ) : (
                  <p>B·∫Øt ƒë·∫ßu tr√≤ chuy·ªán v·ªõi {selectedChat.groupName}</p>
                )}
              </div>
              {/* Thanh nh·∫≠p tin nh·∫Øn */}
              <div className="chat-input-container">
                <input
                  type="text"
                  className="chat-input"
                  value={messageInput}
                  onChange={(e) => setMessageInput(e.target.value)}
                  onKeyDown={handleSendMessage}
                  placeholder={`Nh·∫≠p @, tin nh·∫Øn t·ªõi ${selectedChat.groupName}`}
                />
                <div className="chat-icons">
                  <button title="Sticker">
                    <span>üòä</span>
                  </button>
                  <button title="Image">
                    <span>üñºÔ∏è</span>
                  </button>
                  <button title="Attachment">
                    <span>üìé</span>
                  </button>
                  <button title="Capture">
                    <span>üì∏</span>
                  </button>
                  <button title="Thumbs Up">
                    <span>üëç</span>
                  </button>
                </div>
              </div>
            </section>
          </>
        ) : (
          <>
            <header className="content-header">
              <div className="profile">
                <span className="profile-picture">üë§</span>
              </div>
            </header>
            <section className="welcome-section">
              <h1>Ch√†o m·ª´ng ƒë·∫øn v·ªõi Zolo PC!</h1>
              <p>
                Kh√°m ph√° nh·ªØng ti·ªán √≠ch h·ªó tr·ª£ l√†m vi·ªác v√† tr√≤ chuy·ªán c√πng ng∆∞·ªùi
                th√¢n, b·∫°n b√® ƒë∆∞·ª£c t·ªëi ∆∞u h√≥a cho m√°y t√≠nh c·ªßa b·∫°n.
              </p>
            </section>
          </>
        )}
      </main>
    </div>
  );
};

export default MainPage;
